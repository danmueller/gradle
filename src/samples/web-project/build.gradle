import org.apache.commons.httpclient.HttpClient
import org.apache.commons.httpclient.methods.GetMethod
import org.mortbay.jetty.nio.SelectChannelConnector
import org.mortbay.component.LifeCycle

group = 'gradle'
version = '1.0'
usePlugin('war')
usePlugin('jetty')

configurations {
   moreLibs
}

repositories {
   flatDir(rootDir: "$rootDir/lib")
   mavenCentral()
}

dependencies {
    compile ":compile:1.0"
    providedCompile ":providedCompile:1.0@jar", "javax.servlet:servlet-api:2.5"
    runtime ":runtime:1.0"
    providedRuntime ":providedRuntime:1.0@jar"
    testCompile "junit:junit:3.8.2"
    moreLibs ":otherConf:1.0"
}

archive_war {
    fileSet(dir: file('src/rootContent')) // adds a file-set to the root of the archive
//    webInf(dir: file('src/additionalWebInf')) // adds a file-set to the WEB-INF dir.
//    additionalLibs(dir: file('additionalLibs')) // adds a file-set to the WEB-INF/lib dir.
//    libConfigurations('moreLibs') // adds a configuration to the WEB-INF/lib dir.
    webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
}

[jettyRun, jettyRunWar, jettyRunExploded]*.daemon = true
stopKey = 'foo'
stopPort = 9451

createTask('runTest', dependsOn: jettyRun) {
    callServlet()
}

createTask('runWarTest', dependsOn: jettyRunWar) {
    callServlet()
}

File explodedDir = "$buildDir/exploded" as File
createTask('explodedWar', dependsOn: archive_war) {
    ant.unzip(src: archive_war.getArchivePath(), dest: explodedDir)
}

jettyRunExploded {
    dependsOn explodedWar
    webApp = explodedDir
}

createTask('runExplodedTest', dependsOn: jettyRunExploded) {
    callServlet()
}

[jettyRun, jettyRunWar, jettyRunExploded].each { jetty ->
    jetty.dependsOn jettyStop
    jetty.connectors = configure(new org.mortbay.jetty.nio.SelectChannelConnector()) {
        port = 8163
        maxIdleTime = 30000
    }
}

private void callServlet() {
    HttpClient client = new HttpClient()
    GetMethod method = new GetMethod("http://localhost:8163/web-project/hello")
    client.executeMethod(method)
    new File(buildDir, "servlet-out.txt").write(method.getResponseBodyAsString())
    jettyStop.execute()
}

