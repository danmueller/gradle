import org.apache.ivy.core.install.InstallOptions
import org.apache.ivy.core.module.descriptor.DefaultModuleDescriptor
import org.apache.ivy.core.module.descriptor.DependencyDescriptor
import org.gradle.api.DependencyManager
import org.apache.ivy.plugins.resolver.*

usePlugin('groovy')

dependencies {
    addMavenRepo()
    classpathResolvers.add(new URLResolver()) {
      name = 'sf_gradleRepo'
      addArtifactPattern('http://gradle.sourceforge.net/gradleRepo/[organisation]/[module](/[branch])/[type]s/[artifact]-[revision](-[classifier])(.[ext])')
    }
    compile "com.svnkit:svnkit:1.1.6", "com.svnkit:svnkit-javahl:1.1.6", 'org.hamcrest:hamcrest-core:1.1', 'org.hamcrest:hamcrest-library:1.1'
}

sourceCompatibility = 1.5
targetCompatibility = 1.5
// todo Actually it should be only groovy, but without junit we get a strange error. We need to understand this.
compile.groovyClasspath = org.gradle.util.BootstrapUtil.groovyFiles
testCompile.groovyClasspath = org.gradle.util.BootstrapUtil.groovyFiles
compile.unmanagedClasspath(org.gradle.util.BootstrapUtil.gradleClasspath as File[])
test {
    include '**/*Test.class'
    exclude '**/Abstract*'
    // We set forkmode to ONCE as our tests are written in Groovy and the startup time of Groovy is significant.
    options.fork(forkMode: org.gradle.api.tasks.testing.ForkMode.ONCE)
}

createTask('ide') {
    def libDir = file('lib')
    ant.delete(dir: libDir)
    [dependencies.runtime, dependencies.testRuntime].each {config ->
        config.files.each {file ->
            ant.copy(file: file, todir: libDir)
        }
    }
}
